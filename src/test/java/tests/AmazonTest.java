package tests;import org.openqa.selenium.By;import org.openqa.selenium.Keys;import org.openqa.selenium.WebDriver;import org.openqa.selenium.WebElement;import org.testng.Assert;import org.testng.annotations.AfterMethod;import org.testng.annotations.BeforeMethod;import org.testng.annotations.Test;import utilities.ConfigurationReader;import utilities.Driver;import java.io.IOException;import java.net.HttpURLConnection;import java.net.URL;import java.util.List;import java.util.concurrent.TimeUnit;public class AmazonTest {    public WebDriver driver;    @BeforeMethod    public void setup(){        driver = Driver.getDriver();        driver.manage().timeouts().implicitlyWait(Long.valueOf(ConfigurationReader.getProperty("implicitwait")), TimeUnit.SECONDS);        driver.manage().window().fullscreen();        driver.get(ConfigurationReader.getProperty("url"));    }    @AfterMethod    public void tearDown(){        driver.quit();    }    String url = "";    HttpURLConnection conn = null;    int respCode = 200;    @Test    public void urlTest() throws InterruptedException {        List<WebElement> links = Driver.getDriver().findElements(By.tagName("a"));        int count = 0;        for (WebElement link : links) {            url = link.getAttribute("href");            if (url == null || url.isEmpty()) {                System.out.println("URL is null or empty");                continue;            }            try {                conn = (HttpURLConnection)new URL(url).openConnection();                conn.setRequestMethod("HEAD");                conn.connect();                respCode = conn.getResponseCode();                if (respCode >= 400) {                    System.out.println(url + " is not working and accessible");                } else {                    System.out.println(url + " is working and accessible");                    count++;                }            } catch (IOException e) {                e.printStackTrace();            }        }        System.out.println("The total number of links found: " + links.size() + " But number of working an accessible links: " + count);    }    @Test    public void searchBook(){        Driver.getDriver().findElement(By.id("twotabsearchtextbox")).sendKeys("testing with c#" + Keys.ENTER);        List<WebElement> itemsList = Driver.getDriver().findElements(By.xpath("//div[@data-index='0']/../div//h2/a/span"));        String expectedName = "The Art of Unit Testing: with examples in C#";        for (int i = 0; i < 3; i++){            if (i==2){                String actualName = itemsList.get(i).getText();                Assert.assertEquals(expectedName,actualName,"Book name does not match");                System.out.println("Book name is matching");                break;            }        }    }}